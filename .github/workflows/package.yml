name: Build Package and deploy to gh-pages

on:
  push: {}
  schedule:
  - cron:  '0 3 * * *'

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      -
        name: Get pip cache
        id: pip-cache
        run: |
          python -c "from pip._internal.locations import USER_CACHE_DIR; print('::set-output name=dir::' + USER_CACHE_DIR)"
      -
        name: pip cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      -
        name: Download dependencies
        run: |
          pip install -U pip setuptools wheel build
          pip install "https://github.com/intel/cve-bin-tool/archive/main.zip#egg=cve-bin-tool" "https://github.com/intel/dffml/archive/66f965a4364dfb53ea2fc3343f1ecfc02bb9b83a.zip#egg=dffml"
      -
        name: Download NVD
        run: |
          mkdir empty
          mkdir home
          HOME="${PWD}/home" cve-bin-tool -u now -n json empty
      -
        name: Create package
        run: |
          git config --global user.email cve-bin-tool-db@cvebintool.org
          git config --global user.name cve-bin-tool-db
          dffml service dev create blank -description "CVE Binary Tool NVD database" cve-bin-tool-db
          mv home/.cache/cve-bin-tool/ cve-bin-tool-db/cve_bin_tool_db/db/
          cd cve-bin-tool-db/
          python -m build
      -
        name: Generate index.html
        run: |
          mv cve-bin-tool-db/dist/ public/
          python -m http.server 8080 &
          sleep 0.5
          curl -vfLO http://127.0.0.1:8080/index.html
          kill %1
      -
        name: Deploy to GitHub Pages
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          build_dir: public
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
